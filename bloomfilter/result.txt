🔍 === 샤딩 vs 기본 블룸 필터 비교 (1천만개) ===
CPU 코어 수: 16
GOMAXPROCS: 16

📋 테스트 설정:
   - 데이터 크기: 10,000,000개
   - 목표 오탐률: 0.100%
   - 테스트 케이스: 100,000개

===================================================
🧪 기본 블룸 필터 테스트 중...

📊 기본 블룸 필터 결과:
   ⚡ 성능:
      - 삽입 시간: 9.718105275s (1029007 ops/sec)
      - 쿼리 시간: 24.275034ms (4119459 ops/sec)
      - 전체 시간: 9.742380309s (1036708 ops/sec)
   📈 정확도:
      - 측정 오탐률: 0.0950%
   💾 메모리:
      - 사용량: 17.14 MB

==================================================
🚀 샤딩 블룸 필터 테스트 중...
🔧 샤딩 블룸 필터 설계:
   - 예상 아이템 수: 10,000,000개
   - 목표 오탐률: 0.100%
   - 샤드 개수: 32개 (CPU 코어: 16)
   - 샤드당 아이템: 312,500개
   - 샤드 비트 수: 5비트
   - 총 메모리 사용량: 17.14 MB
   - 샤드당 메모리: 0.54 MB


📊 샤딩 블룸 필터 결과:
   ⚡ 성능:
      - 삽입 시간: 1.020850776s (9795751 ops/sec)
      - 쿼리 시간: 3.203375ms (31217076 ops/sec)
      - 전체 시간: 1.024054151s (9862760 ops/sec)
   📈 정확도:
      - 측정 오탐률: 0.1100%
   💾 메모리:
      - 사용량: 17.14 MB

==================================================

⚡ === 성능 비교 ===
🏃 속도 개선:
   - 삽입 가속비: 9.52x
   - 쿼리 가속비: 7.58x
   - 전체 가속비: 9.51x
💾 메모리 사용:
   - 기본: 17.14 MB
   - 샤딩: 17.14 MB
   - 메모리 비율: 1.00x
🎯 정확도:
   - 기본 오탐률: 0.0950%
   - 샤딩 오탐률: 0.1100%
   - 오탐률 차이: 0.0150%

📈 전체 효율성: 9.51 (속도 향상 / 메모리 증가)
✅ 샤딩이 매우 효과적입니다!

🎉 전체 실행 시간: 20.227317195s

💡 === 권장사항 ===
✅ 대용량 데이터에서는 샤딩 블룸 필터를 사용하세요!
   - 락 경합 없는 진정한 병렬 처리
   - 예측 가능한 성능
   - 수평 확장 가능

🔧 샤딩 블룸 필터 최적화 팁:
   - 샤드 수를 CPU 코어의 배수로 설정
   - 해시 분산이 균등한지 주기적으로 확인
   - 메모리 여유가 있다면 샤드 수를 늘려 병렬성 향상
   - 각 샤드의 오탐률을 독립적으로 관리